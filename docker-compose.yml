version: "3.9"

services:
  webserver:
    build:
      context: ./webserver
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: on-failure

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  flower:
    build:
      context: ./worker
      dockerfile: Dockerfile
    command: poetry run celery -A celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - FLOWER_BASIC_AUTH=admin:supersecret
    depends_on:
      - rabbitmq
      - worker

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin_user
      RABBITMQ_DEFAULT_PASS: admin_pass
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=admin_user
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_DB=app_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_user -d app_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  db_data: 